cmake_minimum_required(VERSION 3.15)
project(game_engine)

set(CMAKE_CXX_STANDARD 17)

#add_executable(game_engine main.cpp src/graphics/Display.cpp include/graphics/Display.h src/graphics/Shader.cpp include/graphics/Shader.h src/graphics/Mesh.cpp include/graphics/Mesh.h src/graphics/Texture.cpp include/graphics/Texture.h include/game/Transform.h include/graphics/Camera.h src/graphics/ModelImporter.cpp include/graphics/ModelImporter.h src/game/Game.cpp include/game/Game.h src/components/Component.cpp include/components/Component.h src/components/MeshRenderer.cpp include/components/MeshRenderer.h src/game/Scene.cpp include/game/Scene.h src/components/Renderer.cpp include/components/Renderer.h src/game/GameObject.cpp include/game/GameObject.h src/graphics/Material.cpp include/graphics/Material.h src/graphics/lighting/DirectionalLight.cpp include/graphics/lighting/DirectionalLight.h src/graphics/lighting/PointLight.cpp include/graphics/lighting/PointLight.h)
add_library(game_engine STATIC src/graphics/Shader.cpp include/engine/graphics/Shader.h src/graphics/Mesh.cpp include/engine/graphics/Mesh.h src/graphics/Texture.cpp include/engine/graphics/Texture.h include/engine/game/Transform.h include/engine/graphics/Camera.h src/graphics/Camera.cpp src/graphics/ModelImporter.cpp include/engine/graphics/ModelImporter.h src/game/Game.cpp include/engine/game/Game.h src/components/Component.cpp include/engine/components/Component.h src/components/MeshRenderer.cpp include/engine/components/MeshRenderer.h src/game/Scene.cpp include/engine/game/Scene.h src/components/Renderer.cpp include/engine/components/Renderer.h src/game/GameObject.cpp include/engine/game/GameObject.h src/graphics/Material.cpp include/engine/graphics/Material.h src/graphics/lighting/DirectionalLight.cpp include/engine/graphics/lighting/DirectionalLight.h src/graphics/lighting/PointLight.cpp include/engine/graphics/lighting/PointLight.h include/engine/Core.h include/engine/Objects.h src/game/SceneView.cpp include/engine/game/SceneView.h src/game/ContextController.cpp include/engine/game/ContextController.h src/core/Utils.cpp include/engine/core/Utils.h src/editor/EditorView.cpp include/engine/editor/EditorView.h src/editor/EventHandler.cpp include/engine/editor/EventHandler.h include/engine/core/AssetManager.h include/engine/core/Asset.h src/core/Asset.cpp src/game/Transform.cpp)
find_package(OpenCV REQUIRED)
find_package(ASSIMP REQUIRED)
find_package(nlohmann_json REQUIRED)
find_package(Qt5 REQUIRED COMPONENTS OpenGL)
target_link_libraries(${PROJECT_NAME} GL GLEW SDL2 ${OpenCV_LIBS} assimp Qt5::OpenGL nlohmann_json::nlohmann_json)
include_directories(${PROJECT_NAME} glm ${GLEW_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS} ${ASSIMP_INCLUDE_DIR})